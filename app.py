import streamlit as st
import requests
import pandas as pd
from iteration_utilities import unique_everseen

# Configuraci칩n de la p치gina con todos los par치metros posibles
st.set_page_config(
    page_title="Uso de modelos de Hugging Face",
    page_icon="游뱕",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://www.streamlit.io',
        'Report a bug': 'https://www.streamlit.io/contact',
        'About': 'Esta es una aplicaci칩n de prueba creada con Streamlit'
    }
)

HUGGINGFACE_API_KEY = st.secrets["HUGGINGFACE_API_KEY"]

# Lista de modelos y sus descripciones
modelos = {

    "FacebookAI/xlm-roberta-large-finetuned-conll03-english": "Este modelo est치 basado en XLM-RoBERTa, una variante de BERT multiling칲e, y se ha afinado para tareas de reconocimiento de entidades en ingl칠s. \n\n\n\n\n**RoBERTa** (Robustly Optimized BERT Approach) es una versi칩n mejorada de BERT desarrollada por Facebook AI. Fue entrenado con m치s datos y durante m치s tiempo, eliminando algunas restricciones, lo que resulta en un modelo m치s robusto y eficiente para comprender patrones complejos en el lenguaje.",

    "dslim/bert-base-NER": "Este modelo utiliza BERT para realizar tareas de reconocimiento de entidades, optimizado para detectar nombres, lugares y organizaciones. \n\n\n\n **BERT** (Bidirectional Encoder Representations from Transformers) es un modelo de lenguaje natural desarrollado por Google en 2018. Su principal innovaci칩n es la comprensi칩n bidireccional del contexto, lo que le permite analizar palabras dentro de una oraci칩n considerando todo el entorno, mejorando la precisi칩n en tareas como clasificaci칩n de texto y respuesta a preguntas."
}

# Funci칩n para hacer la consulta al modelo
def query(payload, API_URL, headers):
    try:
        response = requests.post(API_URL, headers=headers, json=payload)
        response.raise_for_status()  # Lanza un error si la respuesta es un error HTTP
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"Error en la solicitud: {e}")
        return {}

# Contenido de la barra lateral
st.sidebar.title("Opciones")
modelo = st.sidebar.selectbox("Selecciona una opci칩n", list(modelos.keys()))

# Mostrar la descripci칩n del modelo seleccionado en la barra lateral
st.sidebar.markdown(f"**Descripci칩n del modelo:**\n\n{modelos[modelo]}")

# Columnas principales
columna1, columna2 = st.columns(2)

with columna1:
    API_URL = f"https://api-inference.huggingface.co/models/{modelo}"
    headers = {
        "Authorization": f"Bearer {HUGGINGFACE_API_KEY}",
        "Content-Type": "application/json"
    }

    if "texto_ejemplo" not in st.session_state:
        st.session_state.texto_ejemplo = ""

    # Botones para los textos de muestra
    colboton1, colboton2, colboton3 = st.columns(3)

    with colboton1:
        if st.button("Texto de muestra 1"):
            st.session_state.texto_ejemplo = "El Hormiguero se present칩 en televisi칩n como un programa con invitados de Hollywood, comedia, experimentos cient칤ficos y todo tipo de artificios como construcciones mastod칩nticas o acrobacias espectaculares. Un espacio para toda la familia, liderado por Pablo Motos, que pronto se acostumbr칩 a ser l칤der de audiencias. Un programa de televisi칩n con entrevistas a estrellas internacionales, dos marionetas, ciencia y magia, entre otros menesteres, lider칩 con contundencia la franja del prime time en Espa침a durante a침os. Con el paso del tiempo, la ciencia y la magia fueron dejando paso a pol칠micas, una suerte de reflexiones pol칤ticas y tertulias entre personas que est치n de acuerdo en todo. Eso s칤, las marionetas continuaban."

    with colboton2:
        if st.button("Texto de muestra 2"):
            st.session_state.texto_ejemplo = "Mar칤a Fern치ndez, una ingeniera de Google en Barcelona, viaj칩 a Nueva York para una importante conferencia tecnol칩gica. Durante su estancia, se reuni칩 con Carlos Rodr칤guez, director de innovaci칩n de Apple, para discutir potenciales colaboraciones entre sus equipos. Juntos exploraron ideas sobre inteligencia artificial y su impacto en las ciudades inteligentes. El encuentro tuvo lugar en un elegante restaurante cerca de Wall Street, donde compartieron sus visiones sobre el futuro tecnol칩gico. La conversaci칩n abord칩 proyectos innovadores que podr칤an revolucionar la forma en que interactuamos con la tecnolog칤a en el siglo XXI."

    with colboton3:
        if st.button("Texto de muestra 3"):
            st.session_state.texto_ejemplo = "El Dr. John Smith, un renombrado cient칤fico, ha sido galardonado con el Premio Nobel en Medicina por sus contribuciones en la investigaci칩n del c치ncer. Nacido en Nueva York en 1965, Smith ha trabajado en el Instituto de Tecnolog칤a de Massachusetts (MIT) durante m치s de dos d칠cadas. Su equipo ha desarrollado un nuevo f치rmaco que ha demostrado ser eficaz en el tratamiento de varios tipos de c치ncer. La compa침칤a farmac칠utica GlobalHealth, con sede en San Francisco, ha adquirido los derechos de comercializaci칩n del f치rmaco. Este logro ha sido ampliamente reconocido en todo el mundo, y se espera que tenga un impacto significativo en la lucha contra el c치ncer."

    # 츼rea de texto
    texto_area = st.text_area("Texto a analizar", value=f"{st.session_state.texto_ejemplo}", height=600)

with columna2:
    if texto_area:
        resultado = query({"inputs": texto_area}, API_URL, headers)

        tabJSON, tabEntidades = st.tabs(["Resultado del modelo", "Entidades"])

        with tabJSON:
            st.write(resultado)

        with tabEntidades:
            if resultado:
                # Crea una lista [] de diccionarios de la forma {"Entidad":xxx, "Tipo":xxxx}
                entidades = [{"Entidad": x["word"], "Tipo": x["entity_group"]} for x in resultado]

                dfEntidades = pd.DataFrame.from_dict(entidades)
                st.table(dfEntidades.drop_duplicates())

'''
Otros modelos en app aparte o mejor en esta misma

https://huggingface.co/facebook/musicgen-small

https://huggingface.co/facebook/detr-resnet-50

https://huggingface.co/Yntec/IsThisDisney?text=a+modern+disney++lion+king

((mirar hg hub code que parece mas moderno))

connersdavis/storyboard-v2

https://huggingface.co/jordiclive/flan-t5-3b-summarizer  (este mola, hace resumenes)
https://huggingface.co/google/pegasus-xsum  otro que resume


a침adir spinners

Como se puede usar los modelos desde huggingFace ?
Como se pueden usar los modelos en local, decargandolos ??
Como se pueden usar los modelo desde un colab ?
'''